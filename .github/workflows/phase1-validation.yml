name: Phase 1 - Validation & CI/CD

on:
  push:
    branches:
      - main
      - develop
      - 'claude/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: beerflow_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Create test environment file
        working-directory: backend
        run: |
          cat > .env.test << EOF
          NODE_ENV=test
          DATABASE_HOST=localhost
          DATABASE_PORT=5432
          DATABASE_USERNAME=postgres
          DATABASE_PASSWORD=postgres
          DATABASE_NAME=beerflow_test
          JWT_SECRET=test_jwt_secret_not_secure
          JWT_EXPIRES_IN=7d
          PORT=3001
          CORS_ORIGIN=http://localhost:5173
          EOF

      - name: Run unit tests
        working-directory: backend
        run: npm run test:unit

      - name: Run integration tests
        working-directory: backend
        run: npm run test:integration
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: beerflow_test

      - name: Run performance tests
        working-directory: backend
        run: npm run test:performance
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: beerflow_test

      - name: Generate coverage report
        working-directory: backend
        run: npm run test:cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: backend/coverage
          flags: backend
          name: backend-coverage

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        working-directory: backend
        run: docker build -t beerflow-backend:${{ github.sha }} .

      - name: Test Docker image health check
        working-directory: backend
        run: |
          docker run -d --name test-backend \
            -e DATABASE_HOST=postgres \
            -e DATABASE_PORT=5432 \
            -e DATABASE_USERNAME=postgres \
            -e DATABASE_PASSWORD=postgres \
            -e DATABASE_NAME=beerflow_dev \
            -e JWT_SECRET=test_secret \
            -p 3000:3000 \
            beerflow-backend:${{ github.sha }}

          sleep 30

          # Check if container is running
          docker ps | grep test-backend

          # Cleanup
          docker stop test-backend
          docker rm test-backend

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Run npm audit
        working-directory: backend
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Run ESLint
        working-directory: backend
        run: npm run lint

      - name: Check formatting
        working-directory: backend
        run: npm run format

  validate:
    name: Phase 1 Complete Validation
    runs-on: ubuntu-latest
    needs: [test, build, security, lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validation complete
        run: |
          echo "✅ All Phase 1 validation checks passed!"
          echo "✅ Unit tests: PASSED"
          echo "✅ Integration tests: PASSED"
          echo "✅ Performance tests: PASSED"
          echo "✅ Docker build: PASSED"
          echo "✅ Security scan: PASSED"
          echo "✅ Lint check: PASSED"
